name: Build Rider & Driver APKs (Flutter)

on:
  workflow_dispatch:
    inputs:
      vps_host:
        description: "VPS host"
        required: true
        default: "159.198.36.105"
      vps_user:
        description: "VPS user"
        required: true
        default: "root"
      app_rider_path:
        description: "Rider Flutter app path on VPS"
        required: true
        default: "/var/www/tagxi/appsrc/Main-File-August-20/flutter_user/flutter_user"
      app_driver_path:
        description: "Driver Flutter app path on VPS"
        required: true
        default: "/var/www/tagxi/appsrc/Main-File-August-20/flutter_driver/flutter_driver"
      android_maps_key:
        description: "Android Maps API key (optional; leave blank to use secret)"
        required: false

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      VPS_HOST: ${{ github.event.inputs.vps_host }}
      VPS_USER: ${{ github.event.inputs.vps_user }}
      RIDER_PATH: ${{ github.event.inputs.app_rider_path }}
      DRIVER_PATH: ${{ github.event.inputs.app_driver_path }}
      ANDROID_MAPS_KEY_INPUT: ${{ github.event.inputs.android_maps_key }}
      ANDROID_MAPS_KEY_SECRET: ${{ secrets.ANDROID_MAPS_DEV_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install tooling
        run: sudo apt-get update && sudo apt-get install -y rsync openssh-client sshpass jq

      - name: Add VPS host to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -p 22 "$VPS_HOST" >> ~/.ssh/known_hosts

      - name: Rsync Rider and Driver from VPS
        env:
          SSHPASS: ${{ secrets.VPS_PASSWORD }}
        run: |
          set -e
          sshpass -e rsync -a --delete "${VPS_USER}@${VPS_HOST}:${RIDER_PATH}/" ./rider/
          sshpass -e rsync -a --delete "${VPS_USER}@${VPS_HOST}:${DRIVER_PATH}/" ./driver/

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.24.3"
          channel: stable
          cache: true

      - name: Accept Android SDK licenses
        run: yes | sdkmanager --licenses || true

      - name: Ensure pubspec pins
        run: |
          for FILE in rider/pubspec.yaml driver/pubspec.yaml; do
            [ -f "$FILE" ] || continue
            grep -q '^dependency_overrides:' "$FILE" || echo -e '\ndependency_overrides:\n  collection: 1.18.0' >> "$FILE"
            sed -i -E 's/^([[:space:]]*location:[[:space:]])\^?8[0-9.\-]*/\1^7.0.0/' "$FILE" || true
            sed -i -E 's/^([[:space:]]*flutter_map:[[:space:]])\^?8[0-9.\-]*/\1^7.0.0/' "$FILE" || true
          done

      - name: Flutter pub get (Rider)
        if: ${{ hashFiles('rider/pubspec.yaml') != '' }}
        working-directory: rider
        run: flutter pub get

      - name: Flutter pub get (Driver)
        if: ${{ hashFiles('driver/pubspec.yaml') != '' }}
        working-directory: driver
        run: flutter pub get

      - name: Inject Maps key
        run: |
          KEY="${ANDROID_MAPS_KEY_INPUT:-${ANDROID_MAPS_KEY_SECRET:-}}"
          if [ -n "$KEY" ]; then
            for APP in rider driver; do
              mkdir -p "$APP/android/app/src/main/res/values"
              cat > "$APP/android/app/src/main/res/values/google_maps_api.xml" <<EOF
<resources>
  <string name="google_maps_key" translatable="false">${KEY}</string>
</resources>
EOF
            done
          else
            echo "No Maps key provided; skipping."
          fi

      - name: Build Rider APK
        if: ${{ hashFiles('rider/pubspec.yaml') != '' }}
        working-directory: rider
        run: flutter build apk --debug

      - name: Build Driver APK
        if: ${{ hashFiles('driver/pubspec.yaml') != '' }}
        working-directory: driver
        run: flutter build apk --debug

      - name: Upload APK artifacts
        uses: actions/upload-artifact@v4
        with:
          name: hayyaride-apks
          path: |
            rider/build/app/outputs/flutter-apk/app-debug.apk
            driver/build/app/outputs/flutter-apk/app-debug.apk
          if-no-files-found: warn
